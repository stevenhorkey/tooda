{"version":3,"sources":["logo.svg","utils/API.js","components/TextModal.jsx","components/ListItem.jsx","components/List.jsx","components/ListModal.jsx","pages/Lists.jsx","components/Navbar.jsx","components/Login.jsx","components/Register.jsx","pages/AuthPage.jsx","utils/AuthRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","url","API","getListItems","userId","listId","axios","get","concat","addListItem","data","post","sendSMS","deleteListItem","itemId","delete","updateListItem","put","updateListItemOrder","newItemOrder","updateListItemValue","newValue","loginUser","authURL","registerUser","validateUser","getAllUserLists","id","addList","deleteList","TextModal","state","date","Date","message","componentDidMount","_this2","setState","props","value","console","log","handleChange","event","name","target","Object","defineProperty","changeDateTimePicker","sendTextReminder","e","preventDefault","_this2$state","sendTime","toString","slice","sendDate","toISOString","_this","assertThisInitialized","then","res","closeTextModal","catch","err","this","react_default","a","createElement","Modal_default","show","showTextModal","onHide","Header","Title","onSubmit","Body","className","htmlFor","onChange","type","placeholder","entry_default","Footer","Button_default","variant","onClick","Component","ListItem","onBlur","item","react_beautiful_dnd_esm","draggableId","index","provided","assign","onMouseOver","hoverListitem","completed","draggableProps","dragHandleProps","ref","innerRef","react_textarea_autosize_esm_browser","handleItemChange","triggerTextModal","List","listItems","itemInput","modalData","itemOrder","sortListItems","items","sortedItems","desiredOrder","split","filter","list","forEach","parseInt","push","updateAllListItems","user","ListItems","shouldComponentUpdate","map","objectSpread","ListId","status","revisedItems","arraymove","arr","fromIndex","toIndex","element","splice","onDragEnd","result","destination","source","newItemOrderArr","join","promptDeleteList","window","confirm","title","droppableId","droppableProps","droppablePlaceholder","key","components_ListItem","components_TextModal","ListModal","closeListModal","showListModal","Lists","lists","newListData","triggerListModal","components_List","components_ListModal","Navbar","logout","localStorage","removeItem","location","reload","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","moment","format","Login","stateData","react","email","password","attemptLogin","Register","firstname","lastname","confirmpassword","mobileNumber","pattern","attemptRegister","AuthPage","loading","firstName","lastName","whichForm","reponse","async","changeForm","form","currentTarget","_this$state","response","success","_this$state2","setItem","token","react_router","to","components_Login","components_Register","style","position","bottom","right","AuthRoute","login","getItem","defaults","headers","common","JSON","stringify","WrappedComponent","component","react_router_dom","path","render","App","components_Navbar","exact","utils_AuthRoute","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45875e12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\n\n// All api routes are defined here centrally for ease of use.\nconst url = '/api/';\nconst authURL = '/api/auth/';\n\nexport default {\n\n  getListItems: (userId,listId) => axios.get(url + `getListItems/${userId}/${listId}`),\n  addListItem: data => axios.post(url + 'addListItem', data),\n  sendSMS: data => axios.post(url + 'sendSMS', data),\n  deleteListItem: (listId, itemId) => axios.delete(url + `deleteListItem/${listId}/${itemId}`),\n  updateListItem: (listId, itemId, data) => axios.put(url + `updateListItem/${listId}/${itemId}`, data),\n  updateListItemOrder: (listId, newItemOrder) => axios.put(url + `updateListItemOrder/${listId}`, newItemOrder),\n  updateListItemValue: (listId, itemId, newValue) => axios.put(url + `updateListItemValue/${listId}/${itemId}`, newValue),\n  loginUser: (data) => axios.post(authURL + 'login', data),\n  registerUser: (data) => axios.post(authURL + 'register', data),\n  validateUser: () => axios.post(authURL + 'validate'),\n  getAllUserLists: (id) => axios.get(url + 'getAllUserLists/'+id),\n  addList: data => axios.post(url + 'addList/',data),\n  deleteList: id => axios.delete(url + 'deleteList/'+id),\n\n};\n","import React, { Component, Fragment } from 'react';\nimport API from '../utils/API';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport DateTimePicker from 'react-datetime-picker';\n\nclass TextModal extends Component {\n\n    state = {\n        date: new Date(),\n        message: ''\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            message: this.props.data.value\n        });\n        console.log(this.props.data)\n    }\n\n    handleChange = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({[name]:value});\n    };\n\n    changeDateTimePicker = date => this.setState({ date })\n\n    sendTextReminder = e => {\n        e.preventDefault();\n        let {message, date} = this.state;\n        let sendTime = date.toString().slice(16,21);\n        let sendDate = date.toISOString().slice(0, 10);\n        \n        let _this = this;\n\n        API.sendSMS({\n            message,\n            date,\n            sendTime,\n            sendDate\n        })\n        .then(res => {\n            console.log(res);\n            _this.props.closeTextModal();\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    render() {\n        let data = this.props.data;\n        return (\n            <Modal show={this.props.showTextModal} onHide={this.props.closeTextModal}>\n                <Modal.Header>\n                    <Modal.Title>Set A Text Reminder</Modal.Title>\n                </Modal.Header>\n                <form onSubmit={this.sendTextReminder}>\n                    <Modal.Body>\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"message\">Message</label>\n                                        <input value={this.state.message} name=\"message\" onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Text Message Body\"/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"datepicker\">Date & Time</label>\n                                        <DateTimePicker\n                                            onChange={this.changeDateTimePicker}\n                                            value={this.state.date}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.props.closeTextModal}>\n                        Cancel\n                        </Button>\n                        <Button variant=\"primary\" type=\"submit\">\n                        Set Reminder\n                        </Button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n                \n        );\n    }\n}\n\nexport default TextModal;\n","import React, { Component, Fragment } from 'react';\nimport {Draggable} from 'react-beautiful-dnd';\nimport Textarea from 'react-textarea-autosize';\n\n\nclass ListItem extends Component {\n\n    // state = {\n    //     color: 'white'\n    // }\n\n\n    onBlur = () => {\n        this.props.updateListItemValue(this.props.item.id, this.props.item.value);\n        // this.setState({\n        //     color: 'white'\n        // });\n    }\n\n    // onClick = () => {\n    //     this.setState({\n    //         color: '#ffff724d'\n    //     });\n    // }\n    \n    handleChange = event => {\n        console.log('handleChange')\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({[name]:value});\n    };\n\n    render() {\n        let item = this.props.item;\n        console.log(item);\n        return (\n            <Draggable \n                draggableId={item.id} \n                index={this.props.index}\n            >\n                {(provided) => (\n                    <li\n                    onMouseOver={this.hoverListitem} \n                    className={item.completed ? 'completed' : 'todo'} \n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                    id={`item-`+item.id}\n                    // style={{\n                    //     'background': this.state.color\n                    // }}\n                    >\n                        <Textarea \n                        value={item.value}\n                        onChange={(e) => this.props.handleItemChange(e, item.id)}\n                        name='value'\n                        onBlur={this.onBlur}\n                        // onClick={this.onClick}\n                        />\n                        <span className=\"list-item-btns\">\n\n                            {!item.completed ? \n                                <span onClick={() => this.props.triggerTextModal(item)} className=\"text-item\">\n                                <ion-icon name=\"paper-plane\"></ion-icon>\n                                </span>\n                            : null}\n                            \n                            <span onClick={() => this.props.deleteListItem(item.id)} className=\"delete-item\">\n                                <ion-icon name=\"trash\"></ion-icon>\n                            </span>\n                            {!item.completed ? \n                                <span onClick={() => this.props.updateListItem(item.id, true)} className=\"complete-item\">\n                                <ion-icon name=\"checkmark-circle-outline\"></ion-icon>\n                                {/* <ion-icon name=\"radio-button-off\"></ion-icon> */}\n                                </span>\n                            : \n                                <span onClick={() => this.props.updateListItem(item.id, false)} className=\"return-item\">\n                                <ion-icon name=\"radio-button-off\"></ion-icon>\n                                </span>\n                            }\n                        \n                        </span>\n                    </li>   \n\n                )}\n            </Draggable>\n        );\n    }\n}\n\nexport default ListItem;\n","import React, { Component } from 'react';\nimport API from '../utils/API';\nimport {DragDropContext, Droppable} from 'react-beautiful-dnd';\n\nimport TextModal from './TextModal';\nimport ListItem from './ListItem';\n\nclass List extends Component {\n\n    state = {\n        listItems: [],\n        itemInput: '',\n        showTextModal: false,\n        date: new Date(),\n        modalData: {},\n        itemOrder: null\n    }\n\n    sortListItems = (itemOrder, items) => {\n        console.log('sortListItems')\n\n        let sortedItems = [];\n        // let items = this.props.list.ListItems;\n        let desiredOrder = itemOrder.split(',').filter(e => e);\n        console.log(items, desiredOrder,this.props.list);\n\n        desiredOrder.forEach(id => {\n            console.log(id);\n            items.forEach(item => {\n                console.log(item);\n                if(item.id === parseInt(id)) sortedItems.push(item);\n                // else if(item.id === parseInt(id) && item.completed) sortedCompletedItems.push(item);\n            });\n        });\n\n        console.log(sortedItems);\n\n        this.setState({\n            listItems: sortedItems,\n            itemOrder: desiredOrder\n        });\n\n        console.log(this.state);\n\n\n    }\n\n    updateAllListItems = () => {\n        console.log('updateAllListItems')\n\n        let userId = this.props.user.id;\n        let listId = this.props.list.id;\n        API.getListItems(userId,listId)\n        .then(res => {\n            console.log('updated whole list',res.data);\n            // this.setState({\n            //     listItems: res.data\n            // });\n            // this.sortListItems(this.state.itemOrder, res.data)\n            return res.data;\n\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    componentDidMount = () => {\n        console.log('componentDidMount')\n        // this.updateAllListItems();\n        this.sortListItems(this.props.list.itemOrder, this.props.list.ListItems);\n\n    }\n\n    shouldComponentUpdate = () => {\n        if(this.state.listItems !== this.props.list.listItems) return true;\n        if(this.state.itemOrder !== this.props.list.itemOrder) return true;\n    }\n\n    handleChange = event => {\n        console.log('handleChange')\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({[name]:value});\n    };\n\n    handleItemChange = (event,itemId) => {\n        console.log('handleItemChange')\n\n        this.setState({\n            listItems: this.state.listItems.map(item =>\n                item.id === itemId\n                  ? { ...item, value: event.target.value }\n                  : item\n            )\n        });\n    };\n\n    updateListItemValue = (itemId, newValue) => {\n        console.log('updateListItemValue');\n        API.updateListItemValue(this.props.list.id, itemId, {newValue}).then(res => {\n            console.log(res);\n            this.props.getAllUserLists();\n            // this.updateAllListItems();\n            this.sortListItems(this.props.list.itemOrder,this.updateAllListItems());\n        }).catch(err => {\n            console.log(err);\n        });\n        // console.log(this.state.listItems,revisedItems);\n    }\n\n    addListItem = e => {\n        e.preventDefault();\n        console.log('addListItem')\n        console.log(this.state.itemOrder);\n\n\n        var item = this.state.itemInput;\n        if(item === \"\") return;\n        \n        API.addListItem({'value':item, 'ListId': this.props.list.id})\n        .then(res => {\n            this.state.listItems.push(res.data);\n            this.props.getAllUserLists();\n            this.state.itemOrder.push(`${res.data.id}`);\n            this.setState({\n                itemInput: \"\",\n            })\n            console.log(res);\n            console.log(this.state);\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    changeDateTimePicker = date => this.setState({ date })\n\n    deleteListItem = itemId => {\n        console.log('deleteListItem',itemId)\n        API.deleteListItem(this.props.list.id,itemId)\n        .then(res => {\n            console.log(res);\n            console.log(this.state.itemOrder.filter(id => {\n                console.log(id, itemId.toString());\n                return id !== itemId.toString();\n            }))\n            this.setState({\n                listItems: this.state.listItems.filter(item => item.id !== itemId),\n                itemOrder: this.state.itemOrder.filter(id => id !== itemId.toString())\n            });\n            this.props.getAllUserLists();\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    updateListItem = (itemId, status) => {\n        console.log('updateListItem',itemId)\n        API.updateListItem(this.props.list.id, itemId, {'completed':status})\n        .then(res => {\n            console.log(res);\n            let revisedItems = this.state.listItems.map(item =>\n                item.id === itemId\n                  ? { ...item, completed: status }\n                  : item\n            );\n            this.setState({\n                \n            });\n            console.log(revisedItems);\n            this.setState({\n                listItems: revisedItems\n            });\n            this.props.getAllUserLists();\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    arraymove = (arr, fromIndex, toIndex) => {\n        console.log('arraymove')\n        var element = arr[fromIndex];\n        arr.splice(fromIndex, 1);\n        arr.splice(toIndex, 0, element);\n        return arr;\n    }\n\n    closeTextModal = () => {\n        console.log('closeTextModal')\n        this.setState({\n            showTextModal: false,\n            modalData: {}\n        });\n    }\n\n    triggerTextModal = item => {\n        console.log('triggerTextModal')\n        this.setState({\n            modalData: item,\n            showTextModal: true\n        });\n    }\n\n    onDragEnd = result => {\n        console.log('onDragEnd')\n\n        const { destination, source, draggableId } = result;\n        if (!destination) { return }\n        // console.log(destination, source, draggableId, this.state.itemOrder);\n\n        let newItemOrderArr = this.arraymove(this.state.itemOrder, source.index, destination.index);\n        let newItemOrder = newItemOrderArr.join(',') + ',';\n        console.log(newItemOrderArr);\n        console.log(newItemOrder);\n\n        API.updateListItemOrder(this.props.list.id,{newItemOrder})\n        .then(res => {\n            console.log(res);\n            // this.sortListItems(newItemOrder);\n            // this.props.getAllUserLists();\n            // this.setState({\n            //     itemOrder: newItemOrderArr\n            // });\n            this.sortListItems(newItemOrder, this.state.listItems);\n            console.log(this.state);\n        }).catch(err => {\n            console.log(err);\n        });\n        \n    }\n\n    promptDeleteList = () => {\n        console.log('promptDeleteList')\n\n        let proceedDelete = window.confirm(`You are about to delete the list: '${this.props.list.title}'. This cannot be undone.`);\n\n        if(proceedDelete) {\n            API.deleteList(this.props.list.id)\n            .then(res => {\n                console.log(res);\n                this.props.getAllUserLists();\n            }).catch(err => {\n                console.log(err);\n            });\n        }\n        \n    }\n\n    render() {\n        if(!this.state.listItems) return null;\n\n        // let listItems = this.props.list.ListItems;\n        let listItems = this.state.listItems;\n        console.log('rendering items', this.state)\n\n        return (\n            <div className=\"list-container\">\n                        <div className=\" mx-auto bg-light box-shadow list-card\" id={'list-'+this.props.list.id}>\n                            <div className=\"row px-4 pt-4\">\n                                <div className=\"position-relative w-100 text-center\">\n                                    <h3 className=\"mx-auto mb-4\">{this.props.list.title}</h3>\n                                    <small onClick={this.promptDeleteList} className=\"delete-list text-muted\"><ion-icon name=\"close\"></ion-icon></small>\n                                </div>\n                                <form className=\"col-12 bg-primary p-3 round box-shadow\">\n                                    <input type=\"text\" name=\"itemInput\" onChange={this.handleChange} value={this.state.itemInput} placeholder=\"Is this effective?\" id=\"addListItem\"/>\n                                    <button onClick={this.addListItem} id=\"add-item-btn\"><ion-icon name=\"add\"></ion-icon></button>\n                                </form>\n                            </div>\n                            <DragDropContext\n                                onDragEnd={this.onDragEnd}\n                            >\n                            <div className=\"row p-4\">\n                                <Droppable \n                                    droppableId='todo-list'\n                                >\n                                    {(provided) => (\n                                        <ul \n                                            className=\"list\"\n                                            ref={provided.innerRef}\n                                            {...provided.droppableProps}\n                                            {...provided.droppablePlaceholder}\n                                        >\n                                        {listItems.map((item,key) => {\n                                            // if(!item.completed){\n                                            return(\n                                                <ListItem \n                                                    draggableId={item.id} \n                                                    index={key}\n                                                    triggerTextModal={this.triggerTextModal}\n                                                    deleteListItem={this.deleteListItem}\n                                                    updateListItem={this.updateListItem}\n                                                    item={item}\n                                                    updateListItemValue={this.updateListItemValue}\n                                                    handleItemChange={this.handleItemChange}\n                                                />\n                                                )\n                                            // }\n                                            })}\n                                            {provided.placeholder}\n                                        </ul>\n                                    )}\n                                </Droppable>\n                            </div>\n                            {/* {this.state.listItems.length !== 0 ? \n                                <Fragment>\n                                    <hr/>\n                                    <div className=\"row p-4\">\n                                        <ul className=\"list\">\n                                        {listItems.map((item,key) => {\n                                            if(item.completed){\n                                            return(\n                                                <ListItem \n                                                    draggableId={item.id} \n                                                    index={key}\n                                                    triggerTextModal={this.triggerTextModal}\n                                                    deleteListItem={this.deleteListItem}\n                                                    updateListItem={this.updateListItem}\n                                                    item={item}\n                                                />\n                                            )}\n                                        })}\n                                        </ul>\n                                    </div>\n                                </Fragment>\n                            : null} */}\n                            </DragDropContext>\n                        </div>\n                \n                {/* Modal */}\n                {this.state.showTextModal ? <TextModal data={this.state.modalData} showTextModal={this.state.showTextModal} closeTextModal={this.closeTextModal} /> : null}\n                \n            </div>\n        );\n    }\n}\n\nexport default List;\n","import React, { Component, Fragment } from 'react';\nimport API from '../utils/API';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nclass ListModal extends Component {\n\n    state = {\n        title: ''\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            title: \"\"\n        });\n    }\n\n    handleChange = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({[name]:value});\n    };\n\n    addList = e => {\n        e.preventDefault();\n        let {title} = this.state;\n\n        let _this = this;\n\n        API.addList({\n            title\n        })\n        .then(res => {\n            console.log(res);\n            _this.props.closeListModal();\n            _this.props.getAllUserLists();\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n    \n\n    render() {\n        return (\n            <Modal show={this.props.showListModal} onHide={this.props.closeListModal}>\n                <Modal.Header>\n                    <Modal.Title>Create a New List</Modal.Title>\n                </Modal.Header>\n                <form onSubmit={this.addList}>\n                    <Modal.Body>\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"title\">Title</label>\n                                        <input value={this.state.title} name=\"title\" onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"List Title\"/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.props.closeListModal}>\n                            Cancel\n                        </Button>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Create List\n                        </Button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n                \n        );\n    }\n}\n\nexport default ListModal;\n","import React, { Component, Fragment } from 'react';\nimport API from '../utils/API';\nimport moment from 'moment';\n\nimport List from '../components/List';\nimport ListModal from '../components/ListModal';\n\nclass Lists extends Component {\n\n    state = {\n        lists: [],\n        showListModal: false,\n        newListData: {}\n    }\n\n    getAllUserLists = () => {\n        console.log('getAllUserLists')\n        API.getAllUserLists(this.props.user.id)\n        .then(res => {\n            console.log(res);\n            this.setState({\n                lists: res.data\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    componentDidMount = () => {\n        // console.log(this.props.user.id);\n        this.getAllUserLists();\n    }\n\n    closeListModal = () => this.setState({showListModal: false,});\n\n    triggerListModal = () => this.setState({showListModal: true});\n    \n    render() {\n        return (\n            <div className=\"lists-grid\">\n                <div className=\"lists\">\n                    <div onClick={this.triggerListModal} id=\"add-list-btn\"><ion-icon name=\"add\"></ion-icon></div>\n                    {this.state.lists.map((list,key) => {\n                        console.log('mapping list items')\n                        return(\n                            <List \n                                list={list}\n                                key={key}\n                                user={this.props.user}\n                                getAllUserLists={this.getAllUserLists}\n                            />\n                            )\n                        })}\n                    {/* <List title={'Today'} id={1}/>\n                    <List title={'This Week'} id={2}/>\n                    <List title={'This Month'} id={3}/>\n                    <List title={'End of Semester'} id={4}/> */}\n                    {/* Modal */}\n                    {this.state.showListModal ? <ListModal getAllUserLists={this.getAllUserLists} showListModal={this.state.showListModal} closeListModal={this.closeListModal} /> : null}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Lists;\n","import React, { Component, Fragment } from 'react';\nimport moment from 'moment';\n\nclass Navbar extends Component {\n\n    logout = () => {\n        localStorage.removeItem('jwtToken');\n        window.location.reload();\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light box-shadow\">\n                <a className=\"navbar-brand\" href=\"#\">reList</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                    {/* <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Features</a>\n                    </li> */}\n                    <li className=\"nav-item\">\n                        <span className=\"nav-link\" href=\"#\">{moment().format('MMM D, YYYY')}</span>\n                    </li>\n                    <li className=\"nav-item\" id=\"logout\">\n                        <a className=\"nav-link\" href=\"#\" onClick={this.logout}><ion-icon name=\"log-out\"></ion-icon></a>\n                    </li>\n                    {/* <li className=\"nav-item\">\n                        <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\n                    </li> */}\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;\n","import React, { Component, Fragment } from 'react';\n\nclass Login extends Component {\n\n    render() {\n        let stateData = this.props.stateData;\n        return (\n            <Fragment>\n                <input value={stateData.email} onChange={this.props.handleChange} name=\"email\" className=\"w-100 col-md-12\" placeholder=\"youremail@example.com\" type=\"text\"/>\n                <input value={stateData.password} onChange={this.props.handleChange} name=\"password\" className=\"w-100 col-md-12\" placeholder=\"password\" type=\"password\"/>\n                <button className=\"btn btn-primary col-12 py-2\" onClick={event => this.props.attemptLogin(event)}>Login</button>\n            </Fragment>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component, Fragment } from 'react';\n\nclass Register extends Component {\n\n    render() {\n        let stateData = this.props.stateData;\n        return (\n            <Fragment>\n                <input value={stateData.firstname} onChange={this.props.handleChange} name=\"firstName\" className=\"w-100 col-md-12\" placeholder=\"First Name\" type=\"text\"/>\n                <input value={stateData.lastname} onChange={this.props.handleChange} name=\"lastName\" className=\"w-100 col-md-12\" placeholder=\"Last Name\" type=\"text\"/>\n                <input value={stateData.email} onChange={this.props.handleChange} name=\"email\" className=\"w-100 col-md-12\" placeholder=\"Email\" type=\"text\"/>\n                <input value={stateData.password} onChange={this.props.handleChange} name=\"password\" className=\"w-100 col-md-12\" placeholder=\"Password\" type=\"password\"/>\n                <input value={stateData.confirmpassword} onChange={this.props.handleChange} name=\"confirmpassword\" className=\"w-100 col-md-12\" placeholder=\"Confirm Password\" type=\"password\"/>\n                <input value={stateData.mobileNumber} onChange={this.props.handleChange} name=\"mobileNumber\" className=\"w-100 col-md-12\" placeholder=\"Phone Number\" type=\"tel\" pattern=\"[0-9]{3} [0-9]{3} [0-9]{4}\"/>\n                {/* <div className=\"form-group col-12\"> */}\n                    {/* <input value={stateData.optTerms} onChange={this.props.handleChange} name=\"optTerms\" className=\"\" placeholder=\"Mobile Phone Number\" type=\"checkbox\"/> */}\n                    {/* <small className=\"d-inline\">I agree to the <a href=\"/terms-and-conditions\" target=\"_blank\">terms and conditions</a></small> */}\n                {/* </div> */}\n                <button className=\"btn btn-primary col-12 py-2\" onClick={event => this.props.attemptRegister(event)}>Signup</button>\n            </Fragment>\n        );\n    }\n}\n\nexport default Register;\n","import React, { Component, Fragment } from 'react';\nimport API from '../utils/API';\n\nimport { Redirect } from 'react-router';\nimport Login from '../components/Login';\nimport Register from '../components/Register';\n\nclass AuthPage extends Component {\n\n  state = {\n    loading: false,\n    email: null,\n    password: null,\n    firstName: null,\n    lastName: null,\n    confirmpassword: null,\n    mobileNumber: null,\n    whichForm: 'login',\n    reponse: null,\n    async: false\n  };\n\n  componentDidMount = () => {};\n\n  changeForm = (form, event) => {\n    console.log(form, event.currentTarget)\n    this.setState({\n      whichForm: form\n    })\n  }\n\n  handleChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({[name]:value});\n  };\n\n\n  attemptRegister = (event) => {\n    event.preventDefault();\n\n    // TODO: need to validate phone number and confirm password\n\n    this.setState({\n      async: true\n    })\n\n    let {email, password, firstName, lastName, mobileNumber} = this.state;\n    \n    API.registerUser({\n      email,\n      password,\n      firstName,\n      lastName,\n      mobileNumber\n    })\n      .then(res => {\n        this.setState({\n          async: false,\n          response: res.data.message,\n          success: res.data.success\n        })\n        window.location.reload(); \n        console.log(res);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  attemptLogin = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      async: true\n    })\n\n    let { email, password } = this.state;\n    \n    API.loginUser({\n      email,\n      password\n    })\n      .then(res => {\n        localStorage.setItem('jwtToken', res.data.token);\n        this.setState({\n          async: false,\n          response: res.data.message,\n          success: res.data.success\n        });\n\n        console.log(res,this.state);\n        \n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  render() {\n    if (this.state.success) return <Redirect to=\"/\" />;\n    if (this.state.loading) return null;\n      return( \n      <Fragment>\n          <div className=\"container\">\n              <div className=\"row align-items-center justify-content-center\">\n                  <div className=\"bg-light col-md-4 col-sm-6 col-12 bg-trans-dark py-4 text-left px-5\" id=\"login-container\">\n                    <div>\n                    <div className=\"row\">\n                      <h3 className=\"\" onClick={(event) => this.changeForm('login', event)}>Login</h3> \n                      <h3 className=\"ml-auto text-muted\" onClick={(event) => this.changeForm('signup', event)}>Signup</h3>\n                    </div>\n                      <form className=\"row\">\n                        {(this.state.whichForm === 'login') ? \n                          <Login \n                            stateData={this.state}\n                            handleChange={this.handleChange}\n                            attemptLogin={this.attemptLogin}\n                          />\n                        :\n                        <Fragment>\n                          <Register \n                            stateData={this.state}\n                            handleChange={this.handleChange}\n                            attemptRegister={this.attemptRegister}\n                          />\n                        </Fragment>\n                        }\n                        {(!this.state.async) ? null : \n                        <div className=\"sk-folding-cube\" style={{\n                          position: \"absolute\",\n                          bottom: 14,\n                          right: 45\n                        }}>\n                          <div className=\"sk-cube1 sk-cube\"></div>\n                          <div className=\"sk-cube2 sk-cube\"></div>\n                          <div className=\"sk-cube4 sk-cube\"></div>\n                          <div className=\"sk-cube3 sk-cube\"></div>\n                        </div>\n                        }\n                        {this.state.response ? \n                          <div className=\"alert-danger mt-3 w-100 text-center p-2 round\">{this.state.response}</div>\n                          :\n                          null\n                        }\n                        \n                      </form>\n                    </div>\n                  </div>\n              </div>\n          </div>\n\n\n      </Fragment>\n      );\n  }\n}\n\nexport default AuthPage;\n","import React, {Component} from 'react';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport API from './API';\nimport axios from 'axios';\n\nclass AuthRoute extends Component{\n\n    state = {\n        success: false,\n        login: false,\n        user: {}\n    }\n\n    componentDidMount = () => {\n\n        console.log(this.state)\n        console.log(localStorage.getItem('jwtToken'));\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken');\n        \n\n        API.validateUser()\n        .then(res => {\n            console.log(res);\n            this.setState({\n                user: res.data.user,\n                success: res.data.success\n            })\n            console.log(res.data.user);\n            axios.defaults.headers.common['User'] = JSON.stringify(res.data.user);\n            console.log(axios.defaults.headers.common);\n        }).catch(err => {\n            console.log(err);\n            this.setState({\n                login: true\n            });\n        });\n    }\n\n    render(){\n        if (this.state.login) {\n            return <Redirect to='/login'/>;\n        }\n        if(!this.state.success){\n            return (null);\n        } else {\n            let WrappedComponent = this.props.component;\n            return (\n                <BrowserRouter>\n                    <Route \n                        to={this.props.path}\n                        render={(props) => <WrappedComponent {...props} user={this.state.user} />}\n                    />\n                </BrowserRouter>\n            )\n        }\n    }\n}\n\nexport default AuthRoute;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport logo from './logo.svg';\n\nimport Lists from './pages/Lists';\nimport Navbar from './components/Navbar';\nimport AuthPage from './pages/AuthPage';\nimport AuthRoute from './utils/AuthRoute';\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n          <div className=\"App\">\n            <Navbar/>\n            <div id='content'>\n              <Switch>\n\n                  {/* <Route exact path=\"/signup\" render={() => <Signup />} /> */}\n                  {/* <Route exact path=\"/login\" render={() => <Login />} /> */}\n                  <Route exact path=\"/login\" component={AuthPage} />\n                  \n                  <AuthRoute path='/' component={Lists}/>                                                                \n\n              </Switch>\n            </div>\n          </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle.min.js'\nimport './assets/scss/Index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}